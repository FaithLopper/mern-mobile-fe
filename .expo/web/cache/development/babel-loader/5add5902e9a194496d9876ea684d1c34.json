{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Item, Picker, Toast } from \"native-base\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport FormContainer from \"../../../Shared/Form/FormContainer\";\nimport Input from \"../../../Shared/Form/Input\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\";\nimport { connect } from \"react-redux\";\n\nvar countries = require(\"../../../assets/countries.json\");\n\nvar Checkout = function Checkout(props) {\n  var context = useContext(AuthGlobal);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderItems = _useState2[0],\n      setOrderItems = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address2 = _useState6[0],\n      setAddress2 = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      city = _useState8[0],\n      setCity = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      zip = _useState10[0],\n      setZip = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      country = _useState12[0],\n      setCountry = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      phone = _useState14[0],\n      setPhone = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      user = _useState16[0],\n      setUser = _useState16[1];\n\n  useEffect(function () {\n    setOrderItems(props.cartItems);\n\n    if (context.stateUser.isAuthenticated) {\n      setUser(context.stateUser.user.userId);\n    } else {\n      props.navigation.navigate(\"Cart\");\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Please Login to Checkout\",\n        text2: \"\"\n      });\n    }\n\n    return function () {\n      setOrderItems();\n    };\n  }, []);\n\n  var checkOut = function checkOut() {\n    var order = {\n      city: city,\n      country: country,\n      dateOrdered: Date.now(),\n      orderItems: orderItems,\n      phone: phone,\n      shippingAddress1: address,\n      shippingAddress2: address2,\n      status: \"3\",\n      user: user,\n      zip: zip\n    };\n    props.navigation.navigate(\"Payment\", {\n      order: order\n    });\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true\n  }, React.createElement(FormContainer, {\n    title: \"Shipping Address\"\n  }, React.createElement(Input, {\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Shipping Address 1\",\n    name: \"ShippingAddress1\",\n    value: address,\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Shipping Address 2\",\n    name: \"ShippingAddress2\",\n    value: address2,\n    onChangeText: function onChangeText(text) {\n      return setAddress2(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"City\",\n    name: \"city\",\n    value: city,\n    onChangeText: function onChangeText(text) {\n      return setCity(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Zip Code\",\n    name: \"zip\",\n    value: zip,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setZip(text);\n    }\n  }), React.createElement(Item, {\n    picker: true\n  }, React.createElement(Picker, {\n    mode: \"dropdown\",\n    iosIcon: React.createElement(Icon, {\n      name: \"arrow-down\",\n      color: \"#007aff\"\n    }),\n    style: {\n      width: undefined\n    },\n    selectedValue: country,\n    placeholder: \"Select your country\",\n    placeholderStyle: {\n      color: \"#007aff\"\n    },\n    placeholderIconColor: \"#007aff\",\n    onValueChange: function onValueChange(e) {\n      return setCountry(e);\n    }\n  }, countries.map(function (c) {\n    return React.createElement(Picker.Item, {\n      key: c.code,\n      label: c.name,\n      value: c.name\n    });\n  }))), React.createElement(View, {\n    style: {\n      width: \"80%\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: function onPress() {\n      return checkOut();\n    }\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"names":["React","useEffect","useState","useContext","Item","Picker","Toast","Icon","FormContainer","Input","KeyboardAwareScrollView","AuthGlobal","connect","countries","require","Checkout","props","context","orderItems","setOrderItems","address","setAddress","address2","setAddress2","city","setCity","zip","setZip","country","setCountry","phone","setPhone","user","setUser","cartItems","stateUser","isAuthenticated","userId","navigation","navigate","show","topOffset","type","text1","text2","checkOut","order","dateOrdered","Date","now","shippingAddress1","shippingAddress2","status","text","width","undefined","color","e","map","c","code","name","alignItems","mapStateToProps","state"],"sources":["D:/University/YEAR_3/Mobile_Final/new/mern-stack-ecommerce/easy-shop/Screens/Cart/Checkout/Checkout.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { Text, View, Button } from \"react-native\";\nimport { Item, Picker, Toast } from \"native-base\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport FormContainer from \"../../../Shared/Form/FormContainer\";\nimport Input from \"../../../Shared/Form/Input\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\";\n\nimport { connect } from \"react-redux\";\n\nconst countries = require(\"../../../assets/countries.json\");\n\nconst Checkout = (props) => {\n  const context = useContext(AuthGlobal);\n\n  const [orderItems, setOrderItems] = useState();\n  const [address, setAddress] = useState();\n  const [address2, setAddress2] = useState();\n  const [city, setCity] = useState();\n  const [zip, setZip] = useState();\n  const [country, setCountry] = useState();\n  const [phone, setPhone] = useState();\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    setOrderItems(props.cartItems);\n\n    if (context.stateUser.isAuthenticated) {\n      setUser(context.stateUser.user.userId);\n    } else {\n      props.navigation.navigate(\"Cart\");\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Please Login to Checkout\",\n        text2: \"\",\n      });\n    }\n\n    return () => {\n      setOrderItems();\n    };\n  }, []);\n\n  const checkOut = () => {\n    let order = {\n      city,\n      country,\n      dateOrdered: Date.now(),\n      orderItems,\n      phone,\n      shippingAddress1: address,\n      shippingAddress2: address2,\n      status: \"3\",\n      user,\n      zip,\n    };\n\n    props.navigation.navigate(\"Payment\", { order: order });\n  };\n\n  return (\n    <KeyboardAwareScrollView\n      viewIsInsideTabBar={true}\n      extraHeight={200}\n      enableOnAndroid={true}\n    >\n      <FormContainer title={\"Shipping Address\"}>\n        <Input\n          placeholder={\"Phone\"}\n          name={\"phone\"}\n          value={phone}\n          keyboardType={\"numeric\"}\n          onChangeText={(text) => setPhone(text)}\n        />\n        <Input\n          placeholder={\"Shipping Address 1\"}\n          name={\"ShippingAddress1\"}\n          value={address}\n          onChangeText={(text) => setAddress(text)}\n        />\n        <Input\n          placeholder={\"Shipping Address 2\"}\n          name={\"ShippingAddress2\"}\n          value={address2}\n          onChangeText={(text) => setAddress2(text)}\n        />\n        <Input\n          placeholder={\"City\"}\n          name={\"city\"}\n          value={city}\n          onChangeText={(text) => setCity(text)}\n        />\n        <Input\n          placeholder={\"Zip Code\"}\n          name={\"zip\"}\n          value={zip}\n          keyboardType={\"numeric\"}\n          onChangeText={(text) => setZip(text)}\n        />\n        <Item picker>\n          <Picker\n            mode=\"dropdown\"\n            iosIcon={<Icon name=\"arrow-down\" color={\"#007aff\"} />}\n            style={{ width: undefined }}\n            selectedValue={country}\n            placeholder=\"Select your country\"\n            placeholderStyle={{ color: \"#007aff\" }}\n            placeholderIconColor=\"#007aff\"\n            onValueChange={(e) => setCountry(e)}\n          >\n            {countries.map((c) => {\n              return <Picker.Item key={c.code} label={c.name} value={c.name} />;\n            })}\n          </Picker>\n        </Item>\n        <View style={{ width: \"80%\", alignItems: \"center\" }}>\n          <Button title=\"Confirm\" onPress={() => checkOut()} />\n        </View>\n      </FormContainer>\n    </KeyboardAwareScrollView>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { cartItems } = state;\n  return {\n    cartItems: cartItems,\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}