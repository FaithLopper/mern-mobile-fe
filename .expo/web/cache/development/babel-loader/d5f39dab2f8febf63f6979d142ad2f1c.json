{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Container, Header, Content, ListItem, Text, Radio, Right, Left, Picker, Icon, Body, Title } from 'native-base';\nvar methods = [{\n  name: 'Cash on Delivery',\n  value: 1\n}, {\n  name: 'Bank Transfer',\n  value: 2\n}, {\n  name: 'Card Payment',\n  value: 3\n}];\nvar paymentCards = [{\n  name: 'Wallet',\n  value: 1\n}, {\n  name: 'Visa',\n  value: 2\n}, {\n  name: 'MasterCard',\n  value: 3\n}, {\n  name: 'Other',\n  value: 4\n}];\n\nvar Payment = function Payment(props) {\n  var order = props.route.params;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      card = _useState4[0],\n      setCard = _useState4[1];\n\n  return React.createElement(Container, null, React.createElement(Header, null, React.createElement(Body, null, React.createElement(Title, null, \"Choose your payment method\"))), React.createElement(Content, null, methods.map(function (item, index) {\n    return React.createElement(ListItem, {\n      key: item.name,\n      onPress: function onPress() {\n        return setSelected(item.value);\n      }\n    }, React.createElement(Left, null, React.createElement(Text, null, item.name)), React.createElement(Right, null, React.createElement(Radio, {\n      selected: selected == item.value\n    })));\n  }), selected == 3 ? React.createElement(Picker, {\n    mode: \"dropdown\",\n    iosIcon: React.createElement(Icon, {\n      name: \"arrow-down\"\n    }),\n    headerStyle: {\n      backgroundColor: 'orange'\n    },\n    headerBackButtonTextStyle: {\n      color: '#fff'\n    },\n    headerTitleStyle: {\n      color: '#fff'\n    },\n    selectedValue: card,\n    onValueChange: function onValueChange(x) {\n      return setCard(x);\n    }\n  }, paymentCards.map(function (c, index) {\n    return React.createElement(Picker.Item, {\n      key: c.name,\n      label: c.name,\n      value: c.name\n    });\n  })) : null, React.createElement(View, {\n    style: {\n      marginTop: 60,\n      alignSelf: 'center'\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Confirm\", {\n        order: order\n      });\n    }\n  }))));\n};\n\nexport default Payment;","map":{"version":3,"names":["React","useState","Container","Header","Content","ListItem","Text","Radio","Right","Left","Picker","Icon","Body","Title","methods","name","value","paymentCards","Payment","props","order","route","params","selected","setSelected","card","setCard","map","item","index","backgroundColor","color","x","c","marginTop","alignSelf","navigation","navigate"],"sources":["D:/University/YEAR_3/Mobile_Final/new/mern-stack-ecommerce/easy-shop/Screens/Cart/Checkout/Payment.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Button } from 'react-native'\nimport {\n    Container,\n    Header,\n    Content,\n    ListItem,\n    Text,\n    Radio,\n    Right,\n    Left,\n    Picker,\n    Icon,\n    Body,\n    Title\n} from 'native-base';\n\nconst methods = [\n    { name: 'Cash on Delivery', value: 1 },\n    { name: 'Bank Transfer', value: 2 },\n    { name: 'Card Payment', value: 3}\n]\n\nconst paymentCards = [\n    { name: 'Wallet', value: 1 },\n    { name: 'Visa', value: 2 },\n    { name: 'MasterCard', value: 3},\n    { name: 'Other', value: 4}\n]\n\nconst Payment = (props) => {\n\n    const order = props.route.params;\n\n    const [selected, setSelected] = useState();\n    const [card, setCard] = useState();\n    return(\n       <Container>\n           <Header>\n               <Body>\n                   <Title>Choose your payment method</Title>\n               </Body>\n           </Header>\n           <Content>\n               {methods.map((item, index) => {\n                   return (\n                       <ListItem key={item.name} onPress={() => setSelected(item.value)}>\n                           <Left>\n                            <Text>{item.name}</Text>\n                           </Left>\n                           <Right>\n                               <Radio selected={selected == item.value}/>\n                           </Right>\n                       </ListItem>\n                   )\n               })}\n               {selected == 3 ? (\n                   <Picker\n                    mode=\"dropdown\"\n                    iosIcon={<Icon name={\"arrow-down\"} />}\n                    headerStyle={{ backgroundColor: 'orange' }}\n                    headerBackButtonTextStyle={{ color: '#fff' }}\n                    headerTitleStyle={{ color: '#fff' }}\n                    selectedValue={card}\n                    onValueChange={(x) => setCard(x)}\n                   >\n                       {paymentCards.map((c, index) => {\n                           return <Picker.Item \n                           key={c.name} \n                           label={c.name} \n                           value={c.name} />\n                       })}\n                   </Picker>\n               ) : null }\n               <View style={{ marginTop: 60, alignSelf: 'center' }}>\n                       <Button \n                       title={\"Confirm\"} \n                       onPress={() => props.navigation.navigate(\"Confirm\", { order })}/>\n               </View>\n           </Content>\n       </Container>\n    )\n}\n\nexport default Payment;"],"mappings":"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"},"metadata":{},"sourceType":"module"}