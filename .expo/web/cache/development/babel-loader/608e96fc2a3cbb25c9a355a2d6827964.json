{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Text, Left, Right, ListItem, Thumbnail, Body } from 'native-base';\nimport { connect } from 'react-redux';\nimport * as actions from \"../../../Redux/Actions/cartActions\";\nimport Toast from \"react-native-toast-message\";\nimport axios from \"axios\";\nimport baseURL from \"../../../assets/common/baseUrl\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Confirm = function Confirm(props) {\n  var finalOrder = props.route.params;\n\n  var confirmOrder = function confirmOrder() {\n    var order = finalOrder.order.order;\n    axios.post(baseURL + \"orders\", order).then(function (res) {\n      if (res.status == 200 || res.status == 201) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"Order Completed\",\n          text2: \"\"\n        });\n        setTimeout(function () {\n          props.clearCart();\n          props.navigation.navigate(\"Cart\");\n        }, 500);\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container\n  }, React.createElement(View, {\n    style: styles.titleContainer\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: 'bold'\n    }\n  }, \"Confirm Order\"), props.route.params ? React.createElement(View, {\n    style: {\n      borderWidth: 1,\n      borderColor: 'orange'\n    }\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Shipping to:\"), React.createElement(View, {\n    style: {\n      padding: 8\n    }\n  }, React.createElement(Text, null, \"Address: \", finalOrder.order.order.shippingAddress1), React.createElement(Text, null, \"Address2: \", finalOrder.order.order.shippingAddress2), React.createElement(Text, null, \"City: \", finalOrder.order.order.city), React.createElement(Text, null, \"Zip Code: \", finalOrder.order.order.zip), React.createElement(Text, null, \"Country: \", finalOrder.order.order.country)), React.createElement(Text, {\n    style: styles.title\n  }, \"Items:\"), finalOrder.order.order.orderItems.map(function (x) {\n    return React.createElement(ListItem, {\n      style: styles.listItem,\n      key: x.product.name,\n      avatar: true\n    }, React.createElement(Left, null, React.createElement(Thumbnail, {\n      source: {\n        uri: x.product.image\n      }\n    })), React.createElement(Body, {\n      style: styles.body\n    }, React.createElement(Left, null, React.createElement(Text, null, x.product.name)), React.createElement(Right, null, React.createElement(Text, null, \"$ \", x.product.price))));\n  })) : null, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      margin: 20\n    }\n  }, React.createElement(Button, {\n    title: 'Place order',\n    onPress: confirmOrder\n  }))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearCart: function clearCart() {\n      return dispatch(actions.clearCart());\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: height,\n    padding: 8,\n    alignContent: 'center',\n    backgroundColor: 'white'\n  },\n  titleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 8\n  },\n  title: {\n    alignSelf: 'center',\n    margin: 8,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  listItem: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    width: width / 1.2\n  },\n  body: {\n    margin: 10,\n    alignItems: 'center',\n    flexDirection: 'row'\n  }\n});\nexport default connect(null, mapDispatchToProps)(Confirm);","map":{"version":3,"names":["React","Text","Left","Right","ListItem","Thumbnail","Body","connect","actions","Toast","axios","baseURL","Dimensions","get","width","height","Confirm","props","finalOrder","route","params","confirmOrder","order","post","then","res","status","show","topOffset","type","text1","text2","setTimeout","clearCart","navigation","navigate","catch","error","styles","container","titleContainer","fontSize","fontWeight","borderWidth","borderColor","title","padding","shippingAddress1","shippingAddress2","city","zip","country","orderItems","map","x","listItem","product","name","uri","image","body","price","alignItems","margin","mapDispatchToProps","dispatch","StyleSheet","create","alignContent","backgroundColor","justifyContent","alignSelf","flexDirection"],"sources":["D:/University/YEAR_3/Mobile_Final/new/mern-stack-ecommerce/easy-shop/Screens/Cart/Checkout/Confirm.js"],"sourcesContent":["import React from 'react'\nimport { View, StyleSheet, Dimensions, ScrollView, Button } from 'react-native'\nimport {\n    Text,\n    Left,\n    Right,\n    ListItem,\n    Thumbnail,\n    Body\n} from 'native-base'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../Redux/Actions/cartActions'\n\nimport Toast from \"react-native-toast-message\"\nimport axios from \"axios\"\nimport baseURL from \"../../../assets/common/baseUrl\"\n\nvar { width, height } = Dimensions.get('window')\n\n\nconst Confirm = (props) => {\n\n    const finalOrder = props.route.params;\n\n    const confirmOrder = () => {\n\n        const order = finalOrder.order.order;\n\n        axios\n        .post(`${baseURL}orders`, order)\n        .then((res) => {\n            if (res.status == 200 || res.status == 201) {\n                Toast.show({\n                    topOffset: 60,\n                    type: \"success\",\n                    text1: \"Order Completed\",\n                    text2: \"\",\n                })\n                setTimeout(() => {\n                    props.clearCart();\n                    props.navigation.navigate(\"Cart\")\n                }, 500)\n            }\n        })\n        .catch((error) => {\n            Toast.show({\n                topOffset: 60,\n                type: \"error\",\n                text1: \"Something went wrong\",\n                text2: \"Please try again\",\n            })\n        })\n\n        \n    }\n\n    return(\n        <ScrollView contentContainerStyle={styles.container}>\n            <View style={styles.titleContainer}>\n                <Text style={{ fontSize: 20, fontWeight: 'bold'}}>\n                    Confirm Order\n                </Text>\n                {props.route.params ? \n                <View style={{ borderWidth: 1, borderColor: 'orange'}}>\n                    <Text style={styles.title}>Shipping to:</Text>\n                    <View style={{ padding: 8 }}>\n                        <Text>Address: {finalOrder.order.order.shippingAddress1}</Text>\n                        <Text>Address2: {finalOrder.order.order.shippingAddress2}</Text>\n                        <Text>City: {finalOrder.order.order.city}</Text>\n                        <Text>Zip Code: {finalOrder.order.order.zip}</Text>\n                        <Text>Country: {finalOrder.order.order.country}</Text>\n                    </View>\n                    <Text style={styles.title}>Items:</Text>\n                    {finalOrder.order.order.orderItems.map((x) => {\n                        return (\n                            <ListItem\n                                style={styles.listItem}\n                                key={x.product.name}\n                                avatar\n                            >\n                                <Left>\n                                    <Thumbnail source={{ uri: x.product.image}}/>\n                                </Left>\n                                <Body style={styles.body}>\n                                    <Left>\n                                        <Text>{x.product.name}</Text>\n                                    </Left>\n                                    <Right>\n                                        <Text>$ {x.product.price}</Text>\n                                    </Right>\n                                </Body>\n                            </ListItem>\n                        )\n                    })}\n                </View>    \n           : null }\n           <View style={{ alignItems: 'center', margin: 20 }}>\n                <Button title={'Place order'} onPress={confirmOrder}/>\n           </View>\n            </View>\n        </ScrollView>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        clearCart: () => dispatch(actions.clearCart())\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        height: height,\n        padding: 8,\n        alignContent: 'center',\n        backgroundColor: 'white',\n    },\n    titleContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: 8,\n        \n    },\n    title: {\n        alignSelf: 'center', \n        margin: 8, \n        fontSize: 16,\n        fontWeight: 'bold' \n    },\n    listItem: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        justifyContent: 'center',\n        width: width / 1.2\n    },\n    body: {\n        margin: 10,\n        alignItems: 'center',\n        flexDirection: 'row'\n    }\n})\n\nexport default connect(null, mapDispatchToProps)(Confirm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}