{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Item, Picker, Toast } from 'native-base';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport FormContainer from \"../../../Shared/Form/FormContainer\";\nimport Input from \"../../../Shared/Form/Input\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\";\nimport { connect } from 'react-redux';\n\nvar countries = require(\"../../../assets/countries.json\");\n\nvar Checkout = function Checkout(props) {\n  var context = useContext(AuthGlobal);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderItems = _useState2[0],\n      setOrderItems = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address2 = _useState6[0],\n      setAddress2 = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      city = _useState8[0],\n      setCity = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      zip = _useState10[0],\n      setZip = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      country = _useState12[0],\n      setCountry = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      phone = _useState14[0],\n      setPhone = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      user = _useState16[0],\n      setUser = _useState16[1];\n\n  useEffect(function () {\n    setOrderItems(props.cartItems);\n\n    if (context.stateUser.isAuthenticated) {\n      setUser(context.stateUser.user.sub);\n    } else {\n      props.navigation.navigate(\"Cart\");\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Please Login to Checkout\",\n        text2: \"\"\n      });\n    }\n\n    return function () {\n      setOrderItems();\n    };\n  }, []);\n\n  var checkOut = function checkOut() {\n    var order = {\n      city: city,\n      country: country,\n      dateOrdered: Date.now(),\n      orderItems: orderItems,\n      phone: phone,\n      shippingAddress1: address,\n      shippingAddress2: address2,\n      status: \"3\",\n      user: user,\n      zip: zip\n    };\n    props.navigation.navigate(\"Payment\", {\n      order: order\n    });\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true\n  }, React.createElement(FormContainer, {\n    title: \"Shipping Address\"\n  }, React.createElement(Input, {\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Shipping Address 1\",\n    name: \"ShippingAddress1\",\n    value: address,\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Shipping Address 2\",\n    name: \"ShippingAddress2\",\n    value: address2,\n    onChangeText: function onChangeText(text) {\n      return setAddress2(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"City\",\n    name: \"city\",\n    value: city,\n    onChangeText: function onChangeText(text) {\n      return setCity(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Zip Code\",\n    name: \"zip\",\n    value: zip,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setZip(text);\n    }\n  }), React.createElement(Item, {\n    picker: true\n  }, React.createElement(Picker, {\n    mode: \"dropdown\",\n    iosIcon: React.createElement(Icon, {\n      name: \"arrow-down\",\n      color: \"#007aff\"\n    }),\n    style: {\n      width: undefined\n    },\n    selectedValue: country,\n    placeholder: \"Select your country\",\n    placeholderStyle: {\n      color: '#007aff'\n    },\n    placeholderIconColor: \"#007aff\",\n    onValueChange: function onValueChange(e) {\n      return setCountry(e);\n    }\n  }, countries.map(function (c) {\n    return React.createElement(Picker.Item, {\n      key: c.code,\n      label: c.name,\n      value: c.name\n    });\n  }))), React.createElement(View, {\n    style: {\n      width: '80%',\n      alignItems: \"center\"\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: function onPress() {\n      return checkOut();\n    }\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"names":["React","useEffect","useState","useContext","Item","Picker","Toast","Icon","FormContainer","Input","KeyboardAwareScrollView","AuthGlobal","connect","countries","require","Checkout","props","context","orderItems","setOrderItems","address","setAddress","address2","setAddress2","city","setCity","zip","setZip","country","setCountry","phone","setPhone","user","setUser","cartItems","stateUser","isAuthenticated","sub","navigation","navigate","show","topOffset","type","text1","text2","checkOut","order","dateOrdered","Date","now","shippingAddress1","shippingAddress2","status","text","width","undefined","color","e","map","c","code","name","alignItems","mapStateToProps","state"],"sources":["D:/University/YEAR_3/Mobile_Final/new/mern-stack-ecommerce/easy-shop/Screens/Cart/Checkout/Checkout.js"],"sourcesContent":["import React, { useEffect, useState, useContext} from 'react'\nimport { Text, View, Button } from 'react-native'\nimport { Item, Picker, Toast } from 'native-base'\nimport Icon from 'react-native-vector-icons/FontAwesome'\nimport FormContainer from '../../../Shared/Form/FormContainer'\nimport Input from '../../../Shared/Form/Input'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\"\n\nimport { connect } from 'react-redux'\n\nconst countries = require(\"../../../assets/countries.json\");\n\nconst Checkout = (props) => {\n    const context = useContext(AuthGlobal)\n\n    const [ orderItems, setOrderItems ] = useState();\n    const [ address, setAddress ] = useState();\n    const [ address2, setAddress2 ] = useState();\n    const [ city, setCity ] = useState();\n    const [ zip, setZip ] = useState();\n    const [ country, setCountry ] = useState();\n    const [ phone, setPhone ] = useState();\n    const [ user, setUser ] = useState();\n\n    useEffect(() => {\n        setOrderItems(props.cartItems)\n\n        if(context.stateUser.isAuthenticated) {\n            setUser(context.stateUser.user.sub)\n        } else {\n            props.navigation.navigate(\"Cart\");\n            Toast.show({\n                topOffset: 60,\n                type: \"error\",\n                text1: \"Please Login to Checkout\",\n                text2: \"\"\n            });\n        }\n\n        return () => {\n            setOrderItems();\n        }\n    }, [])\n\n    const checkOut = () => {\n        let order = {\n            city,\n            country,\n            dateOrdered: Date.now(),\n            orderItems,\n            phone,\n            shippingAddress1: address,\n            shippingAddress2: address2,\n            status: \"3\",\n            user,\n            zip,\n        }\n\n        props.navigation.navigate(\"Payment\", {order: order })\n    }\n\n    return (\n        <KeyboardAwareScrollView\n            viewIsInsideTabBar={true}\n            extraHeight={200}\n            enableOnAndroid={true}\n        >\n            <FormContainer title={\"Shipping Address\"}>\n                <Input\n                    placeholder={\"Phone\"}\n                    name={\"phone\"}\n                    value={phone}\n                    keyboardType={\"numeric\"}\n                    onChangeText={(text) => setPhone(text)}\n                />\n                   <Input\n                    placeholder={\"Shipping Address 1\"}\n                    name={\"ShippingAddress1\"}\n                    value={address}\n                    onChangeText={(text) => setAddress(text)}\n                />\n                   <Input\n                    placeholder={\"Shipping Address 2\"}\n                    name={\"ShippingAddress2\"}\n                    value={address2}\n                    onChangeText={(text) => setAddress2(text)}\n                />\n                   <Input\n                    placeholder={\"City\"}\n                    name={\"city\"}\n                    value={city}\n                    onChangeText={(text) => setCity(text)}\n                />\n                   <Input\n                    placeholder={\"Zip Code\"}\n                    name={\"zip\"}\n                    value={zip}\n                    keyboardType={\"numeric\"}\n                    onChangeText={(text) => setZip(text)}\n                />\n                <Item picker>\n                    <Picker\n                        mode=\"dropdown\"\n                        iosIcon={<Icon name=\"arrow-down\" color={\"#007aff\"} />}\n                        style={{ width: undefined }}\n                        selectedValue={country}\n                        placeholder=\"Select your country\"\n                        placeholderStyle={{ color: '#007aff' }}\n                        placeholderIconColor=\"#007aff\"\n                        onValueChange={(e) => setCountry(e)}\n                    >\n                        {countries.map((c) => {\n                            return <Picker.Item \n                                    key={c.code} \n                                    label={c.name}\n                                    value={c.name}\n                                    />\n                        })}\n                    </Picker>\n                </Item>\n                <View style={{ width: '80%', alignItems: \"center\" }}>\n                    <Button title=\"Confirm\" onPress={() => checkOut()}/>\n                </View>\n            </FormContainer>\n        </KeyboardAwareScrollView>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { cartItems } = state;\n    return {\n        cartItems: cartItems,\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout)"],"mappings":"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"},"metadata":{},"sourceType":"module"}